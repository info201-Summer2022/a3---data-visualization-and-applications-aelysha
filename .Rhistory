white_prison_pop_sum <- matrix(0, nrow = 51, ncol = 19)
for(i in 2000:2018){
for(j in 1:51){
temporary_data_10 <- trends_2000_2018 %>%
filter(year == i & state_fips == unique(trends_2000_2018$state_fips)[j])
white_prison_pop_sum[j, i-1999] <- sum(temporary_data_10$white_prison_pop, na.rm = FAlSE)
}
}
white_prison_pop_sum <- matrix(0, nrow = 51, ncol = 19)
for(i in 2000:2018){
for(j in 1:51){
temporary_data_10 <- trends_2000_2018 %>%
filter(year == i & state_fips == unique(trends_2000_2018$state_fips)[j])
white_prison_pop_sum[j, i-1999] <- sum(temporary_data_10$white_prison_pop, na.rm = FALSE)
}
}
View(white_pop_sum_by_state)
white_prison_pop_sum <- as.data.frame(white_prison_pop_sum)
colnames(white_prison_pop_sum) <- as.character(c(2000:2018))
rownames(white_prison_pop_sum) <- unique(trends_after_1999$state)
avg_white_prison_pop <- white_prison_pop_sum %>% mutate(average_white_prison = rowSums(white_prison_pop_sum)/19)
View(avg_white_prison_pop)
white_prison_pop_sum <- as.data.frame(white_prison_pop_sum)
View(white_prison_pop_sum)
white_prison_pop_sum <- matrix(0, nrow = 51, ncol = 19)
for(i in 2000:2018){
for(j in 1:51){
temporary_data_10 <- trends_2000_2018 %>%
filter(year == i & state_fips == unique(trends_2000_2018$state_fips)[j])
white_prison_pop_sum[j, i-1999] <- sum(temporary_data_10$white_prison_pop, na.rm = FALSE)
}
}
View(white_pop_sum_by_state)
View(white_prison_pop_sum)
white_prison_pop_sum <- matrix(0, nrow = 51, ncol = 19)
for(i in 2000:2018){
for(j in 1:51){
temporary_data_10 <- trends_2000_2018 %>%
filter(year == i & state_fips == unique(trends_2000_2018$state_fips)[j])
white_prison_pop_sum[j, i-1999] <- sum(temporary_data_10$white_prison_pop, na.rm = TRUE)
}
}
white_prison_pop_sum <- as.data.frame(white_prison_pop_sum)
colnames(white_prison_pop_sum) <- as.character(c(2000:2018))
rownames(white_prison_pop_sum) <- unique(trends_after_1999$state)
avg_white_prison_pop <- white_prison_pop_sum %>% mutate(average_white_prison = rowSums(white_prison_pop_sum)/19)
Fips <- unique(trends_2000_2018$state_fips)
Average_Black_Prison_Population <- avg_black_prison_pop$average_black_prison
Average_White_Prison_Population <- avg_white_prison_pop$average_white_prison
black_prison_pop_us <- data.frame(Fips, Average_Black_Prison_Population)
View(black_prison_pop_us)
black_prison_pop_us <- data.frame(Fips, Average_Black_Prison_Population)
white_prison_pop_us <- data.frame(Fips, Average_White_Prison_Population)
View(white_prison_pop_sum)
View(white_prison_pop_us)
plot_usmap(data = black_prison_pop_us,
values = "Average_Black_Prison_Population",
color = "white")
fips <- unique(trends_2000_2018$state_fips)
Average_Black_Prison_Population <- avg_black_prison_pop$average_black_prison
Average_White_Prison_Population <- avg_white_prison_pop$average_white_prison
black_prison_pop_us <- data.frame(fips, Average_Black_Prison_Population)
white_prison_pop_us <- data.frame(fips, Average_White_Prison_Population)
plot_usmap(data = black_prison_pop_us,
values = "Average_Black_Prison_Population",
color = "white")
plot_usmap(data = white_prison_pop_us,
values = "Average_White_Prison_Population",
color = "white")
plot_usmap(data = black_prison_pop_us,
values = "Average_Black_Prison_Population",
color = "white")
plot_usmap(data = white_prison_pop_us,
values = "Average_White_Prison_Population",
color = "white")
plot_usmap(data = black_prison_pop_us,
values = "Average_Black_Prison_Population",
color = "white")
plot_usmap(data = black_prison_pop_us,
values = "Average_Black_Prison_Population",
color = "white")
plot_usmap(data = white_prison_pop_us,
values = "Average_White_Prison_Population",
color = "white") +
scale_fill_continuous(name = "White Prison Population (2000-2018)",
label = scales::comma) +
theme(legend.position = "bottom")
plot_usmap(data = black_prison_pop_us,
values = "Average_Black_Prison_Population",
color = "white") +
scale_fill_continuous(name = "Black Prison Population (2000-2018)",
label = scales::comma) +
theme(legend.position = "bottom")
plot_usmap(data = white_prison_pop_us,
values = "Average_White_Prison_Population",
color = "white") +
scale_fill_continuous(name = "White Prison Population (2000-2018)",
label = scales::comma) +
theme(legend.position = "bottom")
plot_usmap(data = black_prison_pop_us,
values = "Average_Black_Prison_Population",
color = "white") +
scale_fill_continuous(name = "Black Prison Population (2000-2018)",
label = scales::comma) +
theme(legend.position = "bottom")
test <- ggplotly(plot_usmap(data = black_prison_pop_us,
values = "Average_Black_Prison_Population",
color = "white") +
scale_fill_continuous(name = "Black Prison Population (2000-2018)",
label = scales::comma) +
theme(legend.position = "bottom"))
test
test <- ggplotly(plot_usmap(data = black_prison_pop_us,
values = "Average_Black_Prison_Population",
color = "white") +
scale_fill_continuous(name = "Number of Individuals",
label = scales::comma) +
theme(legend.position = "bottom") +
labs(title = "Average Black Prison Population, Between 2000 to 2018"))
test
test_2
test_2 <- ggplotly(plot_usmap(data = white_prison_pop_us,
values = "Average_White_Prison_Population",
color = "white") +
scale_fill_continuous(name = "Number of Individuals",
label = scales::comma) +
theme(legend.position = "bottom") +
labs(title = "Average White Prison Population, Between 2000 to 2018"))
test_2
test_2 <- ggplotly(plot_usmap(data = white_prison_pop_us,
values = "Average_White_Prison_Population",
color = "white") +
scale_fill_continuous(name = "Number of Individuals",
label = scales::comma) +
theme(list(plot.title = element_text(hjust = 0.5))) +
labs(title = "Average White Prison Population, Between 2000 to 2018"))
test_2 <- ggplotly(plot_usmap(data = white_prison_pop_us,
values = "Average_White_Prison_Population",
color = "white") +
scale_fill_continuous(name = "Number of Individuals",
label = scales::comma) +
theme(plot.title = element_text(hjust = 0.5)) +
labs(title = "Average White Prison Population, Between 2000 to 2018"))
test_2
test_2 <- ggplotly(plot_usmap(data = white_prison_pop_us,
values = "Average_White_Prison_Population",
color = "white") +
scale_fill_continuous(name = "Number of Individuals",
label = scales::comma) +
theme(plot.title = element_text(hjust = 0.5), legend.position = "bottom") +
labs(title = "Average White Prison Population, Between 2000 to 2018"))
test_2
test <- ggplotly(plot_usmap(data = black_prison_pop_us,
values = "Average_Black_Prison_Population",
color = "white") +
scale_fill_continuous(name = "Number of Individuals",
label = scales::comma) +
geom_point(aes(col=fips)) +
theme(plot.title = element_text(hjust = 0.5)) +
labs(title = "Average Black Prison Population, Between 2000 to 2018"))
test <- ggplotly(plot_usmap(data = black_prison_pop_us,
values = "Average_Black_Prison_Population",
color = "white",
labels = TRUE) +
scale_fill_continuous(name = "Number of Individuals",
label = scales::comma) +
theme(plot.title = element_text(hjust = 0.5)) +
labs(title = "Average Black Prison Population, Between 2000 to 2018"))
test
test_2 <- ggplotly(plot_usmap(data = white_prison_pop_us,
values = "Average_White_Prison_Population",
color = "white",
labels = TRUE) +
scale_fill_continuous(name = "Number of Individuals",
label = scales::comma) +
theme(plot.title = element_text(hjust = 0.5)) +
labs(title = "Average White Prison Population, Between 2000 to 2018"))
avg_blk_prison_us_map <- ggplotly(plot_usmap(data = black_prison_pop_us,
values = "Average_Black_Prison_Population",
color = "white",
labels = TRUE) +
scale_fill_continuous(name = "Number of Individuals",
label = scales::comma) +
theme(plot.title = element_text(hjust = 0.5)) +
labs(title = "Average Black Prison Population, Between 2000 to 2018"))
avg_white_prison_us_map <- ggplotly(plot_usmap(data = white_prison_pop_us,
values = "Average_White_Prison_Population",
color = "white",
labels = TRUE) +
scale_fill_continuous(name = "Number of Individuals",
label = scales::comma) +
theme(plot.title = element_text(hjust = 0.5)) +
labs(title = "Average White Prison Population, Between 2000 to 2018"))
library(patchwork)
install.packages(patchwork)
install.packages("patchwork")
library(patchwork)
avg_blk_prison_us_map + avg_white_prison_us_map
library(ggplot2)
library(patchwork)
avg_blk_prison_us_map + avg_white_prison_us_map
avg_blk_prison_us_map / avg_white_prison_us_map
t6_black_jail_dates <- mutate(long_top_6_black_jail,
date = ymd(years_of_interest, truncated = 2L))
View(t6_black_jail_dates)
while(1 == 1){
print("you suck")
}
black_jail_pop_viz
white_jail_pop_viz
black_adm_vs_pop_interactive
white_adm_vs_pop_interactive
white_vs_black_adm_prop_interactive
black_adm_vs_total_interactive
white_adm_vs_total_interactive
black_prop_vs_white_prop_interactive
avg_blk_prison_us_map
avg_white_prison_us_map
lin_reg_summary_plot5 <- summary(lin_reg_plot5)
View(lin_reg_summary_plot6)
lin_reg_summary_plot6[["coefficients"]]
lin_reg_summary_plot3 <- summary(lin_reg_plot3)
lin_reg_summary_plot3
#Find the linear model for plot 3 in order to get summary stats on the linear regression and find an R2 value
lin_reg_plot3 <- lm(prop_adm_no_ak$Popn_Proportional_Black_Admissions ~ prop_adm_no_ak$Popn_Proportional_White_Admissions)
lin_reg_summary_plot3 <- summary(lin_reg_plot3)
R2_value_plot3 <- summary(lin_reg_plot3)$r.squared
#Create an interactive scatterplot with a best-fit line to compare white admissions proportional to
#White population, and black admissions proportional to black population
white_vs_black_adm_prop <- ggplot(prop_adm_no_ak, aes(x= Popn_Proportional_White_Admissions, y= Popn_Proportional_Black_Admissions)) +
geom_point(aes(col=States)) +
labs(title = "White Prison Admissions Population Proportion vs. Black Prison Admissions Population Proportion (2000-2018)",
x= "White Proportional Admissions",
y= "Black Proportional Admissions") +
theme(plot.title = element_text(hjust = 0.5)) +
annotate("text", x=0.0035, y=0.015, label = "R2= 0.5728713, Slope = 3.4694030") +
geom_smooth(method=lm , color="black", se=FALSE)
white_vs_black_adm_prop_interactive <- ggplotly(white_vs_black_adm_prop)
#View plot
white_vs_black_adm_prop_interactive
# #Find the linear model for plot 4 in order to get summary stats on the linear regression and find an R2 value
# lin_reg_plot4 <- lm(proportional_admissions$Total_Admissions ~ proportional_admissions$Black_Prison_Admissions)
# lin_reg_summary_plot4 <- summary(lin_reg_plot4)
# R2_value_plot4 <- summary(lin_reg_plot4)$r.squared
#
# #Create an interactive scatterplot with a best-fit line to compare black admissions to total admissions
# black_adm_vs_total <- ggplot(proportional_admissions, aes(x= Black_Prison_Admissions, y= Total_Admissions)) +
#   geom_point(aes(col=States)) +
#   labs(title = "Average Black Prison Admissions vs. Total Admissions (2000-2018)",
#        x= "Black Prison Admissions",
#        y= "Total Prison Admissions") +
#   theme(plot.title = element_text(hjust = 0.5)) +
#   annotate("text", x=20000, y=75000, label = "R2= 0.8332937") +
#   geom_smooth(method=lm , color="black", se=FALSE)
# black_adm_vs_total_interactive <- ggplotly(black_adm_vs_total)
# #View plot
# black_adm_vs_total_interactive
# #Find the linear model for plot 5 in order to get summary stats on the linear regression and find an R2 value
# lin_reg_plot5 <- lm(proportional_admissions$Total_Admissions ~ proportional_admissions$White_Prison_Admissions)
# lin_reg_summary_plot5 <- summary(lin_reg_plot5)
# R2_value_plot5 <- summary(lin_reg_plot5)$r.squared
#
# #Create an interactive scatterplot with a best-fit line to compare white admissions to total admissions
# white_adm_vs_total <- ggplot(proportional_admissions, aes(x= White_Prison_Admissions, y= Total_Admissions)) +
#   geom_point(aes(col=States)) +
#   labs(title = "Average White Prison Admissions vs. Total Admissions (2000-2018)",
#        x= "White Prison Admissions",
#        y= "Total Prison Admissions") +
#   theme(plot.title = element_text(hjust = 0.5)) +
#   annotate("text", x=20000, y=76000, label = "R2= 0.8854215") +
#   geom_smooth(method=lm , color="black", se=FALSE)
# white_adm_vs_total_interactive <- ggplotly(white_adm_vs_total)
# #View plot
# white_adm_vs_total_interactive
#Find the linear model for plot 6 in order to get summary stats on the linear regression and find an R2 value
lin_reg_plot6 <- lm(prop_adm_no_null$Adm_Prop_White ~ prop_adm_no_null$Adm_Prop_Black)
lin_reg_summary_plot6 <- summary(lin_reg_plot6)
R2_value_plot6 <- summary(lin_reg_plot6)$r.squared
#Create an interactive scatterplot with a best-fit line to compare black admissions proportional to
#total admissions, and white admissions proportional to total admissions
black_prop_vs_white_prop <- ggplot(prop_adm_no_null, aes(x= Adm_Prop_Black, y= Adm_Prop_White)) +
geom_point(aes(col=States)) +
labs(title = "Black Prison Admissions Proportion vs. White Prison Admissions Proportion (2000-2018)",
x= "Black Prison Admissions",
y= "White Prison Admissions") +
theme(plot.title = element_text(hjust = 0.5)) +
annotate("text", x=0.6, y=0.6, label = "R2= 0.08952752, Slope= -0.241162") +
geom_smooth(method=lm , color="black", se=FALSE)
black_prop_vs_white_prop_interactive <- ggplotly(black_prop_vs_white_prop)
white_vs_black_adm_prop <- ggplot(prop_adm_no_ak, aes(x= Popn_Proportional_White_Admissions, y= Popn_Proportional_Black_Admissions)) +
geom_point(aes(col=States)) +
labs(title = "White Prison Admissions Population Proportion vs. Black Prison Admissions Population Proportion (2000-2018)",
x= "White Proportional Admissions",
y= "Black Proportional Admissions") +
theme(plot.title = element_text(hjust = 0.5)) +
annotate("text", x=0.003, y=0.0, label = "R2= 0.5728713, Slope = 3.4694030") +
geom_smooth(method=lm , color="black", se=FALSE)
white_vs_black_adm_prop_interactive <- ggplotly(white_vs_black_adm_prop)
#View plot
white_vs_black_adm_prop_interactive
lin_reg_plot6 <- lm(prop_adm_no_null$Adm_Prop_White ~ prop_adm_no_null$Adm_Prop_Black)
lin_reg_summary_plot6 <- summary(lin_reg_plot6)
R2_value_plot6 <- summary(lin_reg_plot6)$r.squared
#Create an interactive scatterplot with a best-fit line to compare black admissions proportional to
#total admissions, and white admissions proportional to total admissions
black_prop_vs_white_prop <- ggplot(prop_adm_no_null, aes(x= Adm_Prop_Black, y= Adm_Prop_White)) +
geom_point(aes(col=States)) +
labs(title = "Black Prison Admissions Proportion vs. White Prison Admissions Proportion (2000-2018)",
x= "Black Prison Admissions",
y= "White Prison Admissions") +
theme(plot.title = element_text(hjust = 0.5)) +
annotate("text", x=0.6, y=0.6, label = "R2= 0.08952752, Slope= -0.241162") +
geom_smooth(method=lm , color="black", se=FALSE)
black_prop_vs_white_prop_interactive <- ggplotly(black_prop_vs_white_prop)
#View plot
black_prop_vs_white_prop_interactive
lin_reg_plot6 <- lm(prop_adm_no_null$Adm_Prop_White ~ prop_adm_no_null$Adm_Prop_Black)
lin_reg_summary_plot6 <- summary(lin_reg_plot6)
R2_value_plot6 <- summary(lin_reg_plot6)$r.squared
#Create an interactive scatterplot with a best-fit line to compare black admissions proportional to
#total admissions, and white admissions proportional to total admissions
black_prop_vs_white_prop <- ggplot(prop_adm_no_null, aes(x= Adm_Prop_Black, y= Adm_Prop_White)) +
geom_point(aes(col=States)) +
labs(title = "Proportion of Black Admissions to Total Admissions vs. Proportion of White Admissions to Total Admissions (2000-2018)",
x= "Black Prison Admissions",
y= "White Prison Admissions") +
theme(plot.title = element_text(hjust = 0.5)) +
annotate("text", x=0.6, y=0.6, label = "R2= 0.08952752, Slope= -0.241162") +
geom_smooth(method=lm , color="black", se=FALSE)
black_prop_vs_white_prop_interactive <- ggplotly(black_prop_vs_white_prop)
#View plot
black_prop_vs_white_prop_interactive
################################### THIRD PLOT
white_vs_black_adm_prop <- ggplot(prop_adm_no_ak, aes(x= Popn_Proportional_White_Admissions, y= Popn_Proportional_Black_Admissions)) +
geom_point(aes(col=States)) +
labs(title = "Proportion of White Admissions to White Population vs. Proportion of Black Admissions to Black Population (2000-2018)",
x= "White Proportional Admissions",
y= "Black Proportional Admissions") +
theme(plot.title = element_text(hjust = 0.5)) +
annotate("text", x=0.003, y=0.0, label = "R2= 0.5728713, Slope = 3.4694030") +
geom_smooth(method=lm , color="black", se=FALSE)
white_vs_black_adm_prop_interactive <- ggplotly(white_vs_black_adm_prop)
#View plot
white_vs_black_adm_prop_interactive
black_prison_pop_sum <- matrix(0, nrow = 51, ncol = 19)
for(i in 2000:2018){
for(j in 1:51){
temporary_data_10 <- trends_2000_2018 %>%
filter(year == i & state_fips == unique(trends_2000_2018$state_fips)[j])
black_prison_pop_sum[j, i-1999] <- sum(temporary_data_10$black_prison_pop, na.rm = FALSE)
}
}
black_prison_pop_sum
View(black_prison_pop_sum)
black_prison_pop_sum <- matrix(0, nrow = 51, ncol = 19)
for(i in 2000:2018){
for(j in 1:51){
temporary_data_10 <- trends_2000_2018 %>%
filter(year == i & state_fips == unique(trends_2000_2018$state_fips)[j])
black_prison_pop_sum[j, i-1999] <- sum(temporary_data_10$black_prison_pop, na.rm = TRUE)
}
}
View(black_prison_pop_sum)
avg_blk_prison_us_map <- ggplotly(plot_usmap(data = black_prison_pop_us,
values = "Average_Black_Prison_Population",
color = "white",
labels = TRUE) +
scale_fill_continuous(name = "Number of Individuals",
label = scales::comma) +
theme(plot.title = element_text(hjust = 0.5)) +
labs(title = "Average Black Prison Population, Between 2000 to 2018"))
#View Plot
avg_blk_prison_us_map
avg_blk_prison_us_map <- ggplotly(plot_usmap(data = black_prison_pop_us,
values = "Average_Black_Prison_Population",
color = "white",
labels = TRUE) +
scale_fill_continuous(name = "Number of Individuals",
label = scales::comma) +
theme(plot.title = element_text(hjust = 0.5)) +
labs(title = "Average Black Prison Population, Between 2000 to 2018",
subtitle = "Null Values Indicated by 0"))
#View Plot
avg_blk_prison_us_map
avg_blk_prison_us_map <- ggplotly(plot_usmap(data = black_prison_pop_us,
values = "Average_Black_Prison_Population",
color = "white",
labels = TRUE)) +
scale_fill_continuous(name = "Number of Individuals",
label = scales::comma) +
theme(plot.title = element_text(hjust = 0.5)) +
labs(title = "Average Black Prison Population, Between 2000 to 2018",
subtitle = "Null Values Indicated by 0")
#View Plot
avg_blk_prison_us_map
avg_blk_prison_us_map <- ggplotly(plot_usmap(data = black_prison_pop_us,
values = "Average_Black_Prison_Population",
color = "white",
labels = TRUE) +
scale_fill_continuous(name = "Number of Individuals",
label = scales::comma) +
theme(plot.title = element_text(hjust = 0.5)) +
labs(title = "Average Black Prison Population, Between 2000 to 2018",
subtitle = "Null Values Indicated by 0")
)
avg_blk_prison_us_map
avg_blk_prison_us_map <- plot_usmap(data = black_prison_pop_us,
values = "Average_Black_Prison_Population",
color = "white",
labels = TRUE) +
scale_fill_continuous(name = "Number of Individuals",
label = scales::comma) +
theme(plot.title = element_text(hjust = 0.5)) +
labs(title = "Average Black Prison Population, Between 2000 to 2018",
subtitle = "Null Values Indicated by 0")
avg_blk_prison_us_map
avg_blk_prison_us_map <- ggplotly(plot_usmap(data = black_prison_pop_us,
values = "Average_Black_Prison_Population",
color = "white",
labels = TRUE) +
scale_fill_continuous(name = "Number of Individuals",
label = scales::comma) +
theme(plot.title = element_text(hjust = 0.5)) +
labs(title = "Average Black Prison Population, Between 2000 to 2018",
subtitle = "Null Values Indicated by 0") +
annotate("text", x=1, y=1, "Null Values Indicated by 0")
)
avg_blk_prison_us_map <- ggplotly(plot_usmap(data = black_prison_pop_us,
values = "Average_Black_Prison_Population",
color = "white",
labels = TRUE) +
scale_fill_continuous(name = "Number of Individuals",
label = scales::comma) +
theme(plot.title = element_text(hjust = 0.5)) +
labs(title = "Average Black Prison Population, Between 2000 to 2018",
subtitle = "Null Values Indicated by 0") +
annotate("text", "Null Values Indicated by 0")
)
#View Plot
avg_blk_prison_us_map
avg_blk_prison_us_map
ggplotly(plot_usmap(data = black_prison_pop_us,
values = "Average_Black_Prison_Population",
color = "white",
labels = TRUE) +
scale_fill_continuous(name = "Number of Individuals",
label = scales::comma) +
theme(plot.title = element_text(hjust = 0.5)) +
labs(title = "Average Black Prison Population, Between 2000 to 2018",
subtitle = "Null Values Indicated by 0") +
annotate("text", "Null Values Indicated by 0")
)
avg_blk_prison_us_map <- ggplotly(plot_usmap(data = black_prison_pop_us,
values = "Average_Black_Prison_Population",
color = "white",
labels = TRUE) +
scale_fill_continuous(name = "Number of Individuals",
label = scales::comma) +
theme(plot.title = element_text(hjust = 0.5)) +
labs(title = "Average Black Prison Population, Between 2000 to 2018",
subtitle = "Null Values Indicated by 0")
)
#View Plot
avg_blk_prison_us_map
avg_blk_prison_us_map <- ggplotly(plot_usmap(data = black_prison_pop_us,
values = "Average_Black_Prison_Population",
color = "white") +
scale_fill_continuous(name = "Number of Individuals",
label = scales::comma) +
theme(plot.title = element_text(hjust = 0.5)) +
labs(title = "Average Black Prison Population, Between 2000 to 2018",
subtitle = "Null Values Indicated by 0")
)
avg_blk_prison_us_map
avg_blk_prison_us_map <- ggplotly(plot_usmap(data = black_prison_pop_us,
values = c("Average_Black_Prison_Population", "fips")
color = "white") +
scale_fill_continuous(name = "Number of Individuals",
label = scales::comma) +
theme(plot.title = element_text(hjust = 0.5)) +
labs(title = "Average Black Prison Population, Between 2000 to 2018",
subtitle = "Null Values Indicated by 0")
)
avg_blk_prison_us_map <- ggplotly(plot_usmap(data = black_prison_pop_us,
values = "Average_Black_Prison_Population",
color = "white") +
scale_fill_continuous(name = "Number of Individuals",
label = scales::comma) +
theme(plot.title = element_text(hjust = 0.5)) +
labs(title = "Average Black Prison Population, Between 2000 to 2018",
))
#View Plot
avg_blk_prison_us_map
avg_white_prison_us_map <- ggplotly(plot_usmap(data = white_prison_pop_us,
values = "Average_White_Prison_Population",
color = "white") +
scale_fill_continuous(name = "Number of Individuals",
label = scales::comma) +
theme(plot.title = element_text(hjust = 0.5)) +
labs(title = "Average White Prison Population, Between 2000 to 2018",
))
#View Plot
avg_white_prison_us_map
knitr::opts_chunk$set(echo = TRUE)
source("analysis.R", local = knitr::knit_global())
black_jail_pop_viz
black_jail_pop_viz
white_jail_pop_viz
white_vs_black_adm_prop_interactive
black_prop_vs_white_prop_interactive
avg_blk_prison_us_map
avg_white_prison_us_map
